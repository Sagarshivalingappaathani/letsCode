"use client";
import React, { useState } from 'react';
import Head from 'next/head';
import { app } from '../../firebaseConfig';
import { getAuth, signInWithEmailAndPassword, GoogleAuthProvider, GithubAuthProvider, signInWithPopup } from 'firebase/auth';
import {ToastContainer, toast } from "react-toastify";

const SignIn: React.FC = () => {
    const auth = getAuth(app);
    const googleProvider = new GoogleAuthProvider();
    const githubProvider = new GithubAuthProvider();

    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
 

    const signIn = () => {
        if(!email || !password){
        
            alert("all feilds are required")
        }else{
            signInWithEmailAndPassword(auth, email, password)
            .then((response) => {
                console.log(response.user);
                window.location.href = '/';
            })
            .catch(err => {
                alert('Invalid email or password');
            });
        }
        
    }

    const signInWithGoogle = () => {
        signInWithPopup(auth, googleProvider)
            .then((response) => {
                console.log(response.user);
                window.location.href = '/';
            })
            .catch(err => {
                alert('Failed to sign in with Google');
            });
    }

    const signInWithGithub = () => {
        signInWithPopup(auth, githubProvider)
            .then((response) => {
                console.log(response.user);
                window.location.href = '/';
            })
            .catch(err => {
                alert('Failed to sign in with GitHub');
            });
    }

    return (
        <div className="flex items-center justify-center">
            <Head>
                <title>Next CRUD AUTH</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="bg-gray-200 p-8 rounded-lg shadow-md w-96">
                <h1 className="text-3xl font-semibold text-center text-orange-500 mb-6">Sign In</h1>
                
                <input
                    className="w-full p-2 rounded border border-gray-300 mb-4"
                    placeholder='Email'
                    onChange={(event) => setEmail(event.target.value)}
                    value={email}
                    type='email'
                />
                <input
                    className="w-full p-2 rounded border border-gray-300 mb-4"
                    placeholder='Password'
                    onChange={(event) => setPassword(event.target.value)}
                    value={password}
                    type='password'
                />

                <button
                    className="w-full bg-orange-500 text-white py-2 rounded transition duration-300 hover:bg-orange-600"
                    onClick={signIn}
                >
                    Sign In
                </button>

                <hr className="my-4 border-t border-gray-300" />

                <button
                    className="w-full bg-red-500 text-white py-2 rounded transition duration-300 hover:bg-red-600"
                    onClick={signInWithGoogle}
                >
                    Sign In with Google
                </button>

                <hr className="my-4 border-t border-gray-300" />

                <button
                    className="w-full bg-black text-white py-2 rounded transition duration-300 hover:bg-black"
                    onClick={signInWithGithub}
                >
                    Sign In with GitHub
                </button>
            </main>
        </div>
    )
}

export default SignIn;
