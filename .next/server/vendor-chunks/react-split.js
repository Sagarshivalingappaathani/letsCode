/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-split";
exports.ids = ["vendor-chunks/react-split"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-split/dist/react-split.js":
/*!******************************************************!*\
  !*** ./node_modules/react-split/dist/react-split.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*! react-split - v2.0.14 */\n\n(function (global, factory) {\n     true ? module.exports = factory(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"), __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\"), __webpack_require__(/*! split.js */ \"(ssr)/./node_modules/split.js/dist/split.js\")) :\n    0;\n}(this, (function (React, PropTypes, Split) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n    var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);\n    var Split__default = /*#__PURE__*/_interopDefaultLegacy(Split);\n\n    function objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }\n\n    var SplitWrapper = /*@__PURE__*/(function (superclass) {\n        function SplitWrapper () {\n            superclass.apply(this, arguments);\n        }\n\n        if ( superclass ) SplitWrapper.__proto__ = superclass;\n        SplitWrapper.prototype = Object.create( superclass && superclass.prototype );\n        SplitWrapper.prototype.constructor = SplitWrapper;\n\n        SplitWrapper.prototype.componentDidMount = function componentDidMount () {\n            var ref = this.props;\n            ref.children;\n            var gutter = ref.gutter;\n            var rest = objectWithoutProperties( ref, [\"children\", \"gutter\"] );\n            var options = rest;\n\n            options.gutter = function (index, direction) {\n                var gutterElement;\n\n                if (gutter) {\n                    gutterElement = gutter(index, direction);\n                } else {\n                    gutterElement = document.createElement('div');\n                    gutterElement.className = \"gutter gutter-\" + direction;\n                }\n\n                // eslint-disable-next-line no-underscore-dangle\n                gutterElement.__isSplitGutter = true;\n                return gutterElement\n            };\n\n            this.split = Split__default['default'](this.parent.children, options);\n        };\n\n        SplitWrapper.prototype.componentDidUpdate = function componentDidUpdate (prevProps) {\n            var this$1 = this;\n\n            var ref = this.props;\n            ref.children;\n            var minSize = ref.minSize;\n            var sizes = ref.sizes;\n            var collapsed = ref.collapsed;\n            var rest = objectWithoutProperties( ref, [\"children\", \"minSize\", \"sizes\", \"collapsed\"] );\n            var options = rest;\n            var prevMinSize = prevProps.minSize;\n            var prevSizes = prevProps.sizes;\n            var prevCollapsed = prevProps.collapsed;\n\n            var otherProps = [\n                'maxSize',\n                'expandToMin',\n                'gutterSize',\n                'gutterAlign',\n                'snapOffset',\n                'dragInterval',\n                'direction',\n                'cursor' ];\n\n            var needsRecreate = otherProps\n                // eslint-disable-next-line react/destructuring-assignment\n                .map(function (prop) { return this$1.props[prop] !== prevProps[prop]; })\n                .reduce(function (accum, same) { return accum || same; }, false);\n\n            // Compare minSize when both are arrays, when one is an array and when neither is an array\n            if (Array.isArray(minSize) && Array.isArray(prevMinSize)) {\n                var minSizeChanged = false;\n\n                minSize.forEach(function (minSizeI, i) {\n                    minSizeChanged = minSizeChanged || minSizeI !== prevMinSize[i];\n                });\n\n                needsRecreate = needsRecreate || minSizeChanged;\n            } else if (Array.isArray(minSize) || Array.isArray(prevMinSize)) {\n                needsRecreate = true;\n            } else {\n                needsRecreate = needsRecreate || minSize !== prevMinSize;\n            }\n\n            // Destroy and re-create split if options changed\n            if (needsRecreate) {\n                options.minSize = minSize;\n                options.sizes = sizes || this.split.getSizes();\n                this.split.destroy(true, true);\n                options.gutter = function (index, direction, pairB) { return pairB.previousSibling; };\n                this.split = Split__default['default'](\n                    Array.from(this.parent.children).filter(\n                        // eslint-disable-next-line no-underscore-dangle\n                        function (element) { return !element.__isSplitGutter; }\n                    ),\n                    options\n                );\n            } else if (sizes) {\n                // If only the size has changed, set the size. No need to do this if re-created.\n                var sizeChanged = false;\n\n                sizes.forEach(function (sizeI, i) {\n                    sizeChanged = sizeChanged || sizeI !== prevSizes[i];\n                });\n\n                if (sizeChanged) {\n                    // eslint-disable-next-line react/destructuring-assignment\n                    this.split.setSizes(this.props.sizes);\n                }\n            }\n\n            // Collapse after re-created or when collapsed changed.\n            if (\n                Number.isInteger(collapsed) &&\n                (collapsed !== prevCollapsed || needsRecreate)\n            ) {\n                this.split.collapse(collapsed);\n            }\n        };\n\n        SplitWrapper.prototype.componentWillUnmount = function componentWillUnmount () {\n            this.split.destroy();\n            delete this.split;\n        };\n\n        SplitWrapper.prototype.render = function render () {\n            var this$1 = this;\n\n            var ref = this.props;\n            ref.sizes;\n            ref.minSize;\n            ref.maxSize;\n            ref.expandToMin;\n            ref.gutterSize;\n            ref.gutterAlign;\n            ref.snapOffset;\n            ref.dragInterval;\n            ref.direction;\n            ref.cursor;\n            ref.gutter;\n            ref.elementStyle;\n            ref.gutterStyle;\n            ref.onDrag;\n            ref.onDragStart;\n            ref.onDragEnd;\n            ref.collapsed;\n            var children = ref.children;\n            var rest$1 = objectWithoutProperties( ref, [\"sizes\", \"minSize\", \"maxSize\", \"expandToMin\", \"gutterSize\", \"gutterAlign\", \"snapOffset\", \"dragInterval\", \"direction\", \"cursor\", \"gutter\", \"elementStyle\", \"gutterStyle\", \"onDrag\", \"onDragStart\", \"onDragEnd\", \"collapsed\", \"children\"] );\n            var rest = rest$1;\n\n            return (\n                React__default['default'].createElement( 'div', Object.assign({},\n                    { ref: function (parent) {\n                        this$1.parent = parent;\n                    } }, rest),\n                    children\n                )\n            )\n        };\n\n        return SplitWrapper;\n    }(React__default['default'].Component));\n\n    SplitWrapper.propTypes = {\n        sizes: PropTypes__default['default'].arrayOf(PropTypes__default['default'].number),\n        minSize: PropTypes__default['default'].oneOfType([\n            PropTypes__default['default'].number,\n            PropTypes__default['default'].arrayOf(PropTypes__default['default'].number) ]),\n        maxSize: PropTypes__default['default'].oneOfType([\n            PropTypes__default['default'].number,\n            PropTypes__default['default'].arrayOf(PropTypes__default['default'].number) ]),\n        expandToMin: PropTypes__default['default'].bool,\n        gutterSize: PropTypes__default['default'].number,\n        gutterAlign: PropTypes__default['default'].string,\n        snapOffset: PropTypes__default['default'].oneOfType([\n            PropTypes__default['default'].number,\n            PropTypes__default['default'].arrayOf(PropTypes__default['default'].number) ]),\n        dragInterval: PropTypes__default['default'].number,\n        direction: PropTypes__default['default'].string,\n        cursor: PropTypes__default['default'].string,\n        gutter: PropTypes__default['default'].func,\n        elementStyle: PropTypes__default['default'].func,\n        gutterStyle: PropTypes__default['default'].func,\n        onDrag: PropTypes__default['default'].func,\n        onDragStart: PropTypes__default['default'].func,\n        onDragEnd: PropTypes__default['default'].func,\n        collapsed: PropTypes__default['default'].number,\n        children: PropTypes__default['default'].arrayOf(PropTypes__default['default'].element),\n    };\n\n    SplitWrapper.defaultProps = {\n        sizes: undefined,\n        minSize: undefined,\n        maxSize: undefined,\n        expandToMin: undefined,\n        gutterSize: undefined,\n        gutterAlign: undefined,\n        snapOffset: undefined,\n        dragInterval: undefined,\n        direction: undefined,\n        cursor: undefined,\n        gutter: undefined,\n        elementStyle: undefined,\n        gutterStyle: undefined,\n        onDrag: undefined,\n        onDragStart: undefined,\n        onDragEnd: undefined,\n        collapsed: undefined,\n        children: undefined,\n    };\n\n    return SplitWrapper;\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-split/dist/react-split.js\n");

/***/ })

};
;