"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/problems/[id]/page",{

/***/ "(app-pages-browser)/./data/Problems/mid-linkedList.ts":
/*!*****************************************!*\
  !*** ./data/Problems/mid-linkedList.ts ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   midOfLL: function() { return /* binding */ midOfLL; }\n/* harmony export */ });\nconst intialcode = [\n    {\n        id: 1,\n        name: '\\n        #include <bits/stdc++.h>\\n        using namespace std;\\n        \\n        struct Node\\n        {\\n            int data;\\n            struct Node* next;\\n            \\n            Node(int x){\\n                data = x;\\n                next = NULL;\\n            }\\n        };\\n        void printList(Node* node) \\n        { \\n            while (node != NULL) { \\n                cout << node->data <<\" \"; \\n                node = node->next; \\n            } \\n        }\\n        '\n    },\n    {\n        id: 2,\n        name: '\\nimport java.util.*;\\nimport java.io.*;\\n\\nclass Node{\\n    int data;\\n    Node next;\\n    \\n    Node(int x){\\n        data = x;\\n        next = null;\\n    }\\n    \\n}\\nclass Main{\\n\tstatic void printList(Node node) \\n\t{ \\n\t\twhile (node != null) \\n\t\t{ \\n\t\t\tSystem.out.print(node.data + \" \"); \\n\t\t\tnode = node.next; \\n\t\t} \\n\t\tSystem.out.println(); \\n\t}\\n    public static void main(String args[]) throws IOException { \\n        Scanner sc = new Scanner(System.in);\\n        int t = sc.nextInt();\\n        while(t > 0){\\n        \tint n = sc.nextInt();\\n            Node head = new Node(sc.nextInt());\\n            Node tail = head;\\n            for(int i=0; i<n-1; i++)\\n            {\\n                tail.next = new Node(sc.nextInt());\\n                tail = tail.next;\\n            }\\n            Solution g = new Solution();\\n            int ans = g.getMiddle(head);\\n            System.out.print(ans+ \" \");\\n            t--;\\n        }\\n    } \\n} \\n   \\n'\n    }\n];\nconst endingcode = [\n    {\n        id: 1,\n        name: \"int main() {\\n    int t;\\n    cin>>t;\\n    while(t--){\\n        int N;\\n        cin>>N;\\n        int data;\\n        cin>>data;\\n        struct Node *head = new Node(data);\\n        struct Node *tail = head;\\n        for (int i = 0; i < N-1; ++i)\\n        {\\n            cin>>data;\\n            tail->next = new Node(data);\\n            tail = tail->next;\\n        }\\n        \\n        Solution ob;\\n        cout << ob.getMiddle(head) << endl;\\n    }\\n    return 0;\\n}\\n\\n\"\n    },\n    {\n        id: 2,\n        name: \"\"\n    }\n];\nconst boilercode = [\n    {\n        id: 1,\n        name: \"/* Link list Node \\nstruct Node {\\n    int data;\\n    Node* next;\\n    \\n    Node(int x){\\n        data = x;\\n        next = NULL;\\n    }\\n    \\n}; */\\nclass Solution{\\n    public:\\n    /* Should return data of middle node. If linked list is empty, then  -1*/\\n    int getMiddle(Node *head)\\n    {\\n        // Your code here\\n    }\\n};\\n\"\n    },\n    {\n        id: 2,\n        name: \"/* Node of a linked list\\nclass Node {\\n  int data;\\n   Node next;\\n   Node(int d)  { data = d;  next = null; }\\n}\\n*/\\n\\nclass Solution\\n{\\n   int getMiddle(Node head)\\n   {\\n        // Your code here.\\n   }\\n}\"\n    }\n];\nconst solutioncode = [\n    {\n        id: 1,\n        name: \"class Solution{\\n    public:\\n    /* Should return data of middle node. If linked list is empty, then  -1*/\\n    int getMiddle(Node *head)\\n    {\\n        Node *fast=head;\\n        Node *slow=head;\\n        while(fast!=NULL){\\n            fast=fast->next;\\n            if(fast!=NULL){\\n                slow=slow->next;\\n                fast=fast=fast->next;\\n            }\\n            \\n        }\\n        \\n        return slow->data;\\n    }\\n};\\n\"\n    },\n    {\n        id: 2,\n        name: \"class Solution\\n{\\n    int getMiddle(Node head)\\n    {\\n        if(head.next==null) return head.data;\\n        if(head.next.next==null) return head.next.data;\\n        Node slow=head;\\n        Node fast=head;\\n        while(fast.next!=null){\\n             slow=slow.next;\\n            if(fast.next.next==null)\\n                return slow.data;\\n                \\n            fast=fast.next.next;\\n        }\\n        return slow.data;\\n    }\\n}\"\n    }\n];\nconst midOfLL = {\n    id: \"mid-linkedList\",\n    title: \"Finding middle element in a linked list\",\n    problemStatement: '<div class=\"mt-1\">\\n    <p>\\n        Given a singly linked list of N nodes, the task is to find the middle of the linked list. For example, if the linked list is 1->2->3->4->5, then the middle node of the list is 3.\\n    </p>\\n    <p>\\n        If there are two middle nodes (in case, when N is even), print the second middle element. For example, if the linked list given is 1->2->3->4->5->6, then the middle node of the list is 4.\\n    </p>\\n</div>\\n',\n    examples: [\n        {\n            id: 1,\n            inputText: \"LL: 1->2->3->4->5\",\n            outputText: \" 3 \"\n        },\n        {\n            id: 2,\n            inputText: \"LL : 2->4->6->7->5->1\",\n            outputText: \" 7 \"\n        },\n        {\n            id: 3,\n            inputText: \"LL : 4->5->6\",\n            outputText: \" 5 \"\n        }\n    ],\n    constraints: '<div className=\"mt-4\">\\n            <ul>\\n                <li className=\"mt-2\">\\n                    <code>Expected Time Complexity: O(N)</code>\\n                </li>\\n                <li className=\"mt-2\">\\n                    <code>Expected Auxiliary Space: O(1)</code>\\n                </li>\\n                <li className=\"mt-2\">\\n                    <code>1 ≤ N ≤ 5000</code>\\n                </li>\\n            </ul>\\n        </div>',\n    starterCode: boilercode,\n    intialcode: intialcode,\n    endingcode: endingcode,\n    solutioncode: solutioncode,\n    inuputs: \"3 5 1 2 3 4 5 6 2 4 6 7 5 1 3 4 8 11\",\n    output: \"3 7 8 \",\n    order: 4,\n    difficulty: \"Medium\",\n    tag: [\n        {\n            id: 1,\n            name: \"Data Structure\"\n        },\n        {\n            id: 2,\n            name: \"LinkedList\"\n        }\n    ],\n    companies: [\n        {\n            id: 1,\n            name: \"Zoho\"\n        },\n        {\n            id: 2,\n            name: \"GE\"\n        },\n        {\n            id: 3,\n            name: \"Nagarro\"\n        }\n    ],\n    averagetime: \"15m\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data/Problems/mid-linkedList.ts\n"));

/***/ })

});